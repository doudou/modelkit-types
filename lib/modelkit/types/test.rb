# simplecov must be loaded FIRST. Only the files required after it gets loaded
# will be profiled !!!
if ENV['TEST_ENABLE_COVERAGE'] == '1'
    begin
        require 'simplecov'
        SimpleCov.start
    rescue LoadError
        require 'modelkit/types'
        ModelKit::Types.warn "coverage is disabled because the 'simplecov' gem cannot be loaded"
    rescue Exception => e
        require 'modelkit/types'
        ModelKit::Types.warn "coverage is disabled: #{e.message}"
    end
end

if ENV['TEST_DEBUG'] == '1'
    if RUBY_VERSION >= "2.0"
        require 'minitest/byebug'
    else
        require 'minitest/debugger'
    end
end

require 'modelkit/types'
ModelKit::Types.load_plugins = false

if ENV['TEST_ENABLE_PRY'] != '0'
    begin
        require 'pry'
    rescue Exception
        ModelKit::Types.warn "debugging is disabled because the 'pry' gem cannot be loaded"
    end
end


# This file is generated by CMake. The test must be run with the right -I option
# so that we can require it 'as-is'
require 'minitest/autorun'
require 'minitest/spec'
require 'flexmock/minitest'

module ModelKit::Types
    module SelfTest
        def setup
            @__warn_about_helper_method_clashes = ModelKit::Types.warn_about_helper_method_clashes?
            ModelKit::Types.warn_about_helper_method_clashes = false
            super
        end

        def teardown
            if defined? FlexMock
                flexmock_teardown
            end
            super
            ModelKit::Types.warn_about_helper_method_clashes = @__warn_about_helper_method_clashes
        end

        def find_in_path(name)
            ENV['PATH'].split(':').each do |p|
                if File.file?(full_path = File.join(p, name))
                    return full_path
                end
            end
            nil
        end
    end
end

module Minitest
    class Test
        include ModelKit::Types::SelfTest
    end
end

